/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizadorlexicosintactico;

import java.util.Scanner;
import java.util.Stack;

/**
 *
 * @author Francisco Favela
 */
public class AnalizadorLexico {

    String reservada[] = {"array", "begin", "case", "const", "do", "else", "writeln", "readln", "elseif", "end",
        "for", "if", "loop", "module", "function", "exit", "not", "of", "mod", "record", "repeat", "return",
        "pocedure", "by", "then", "to", "until", "var", "while", "with", "true", "false", "div", "integer", "real",
        "char", "string", "byte", "boolean", "string"};
    public int [][] matrizL={
            //	l	L	d	_	.	'	/	"	{	}	=	<	>	+	-	(	)	[	]	,	;	:	/t	/n	/b      !=
		{1	,1	,3	,506	,16	,6	,8	,15	,11	,506	,12	,11	,12	,113	,114	,118	,119	,120	,121	,122	,124	,125	,0	,0	,0	,505}	,
		{1	,1	,1	,2	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100}	,
		{1	,1	,1	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501}	,
		{101	,101	,3	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101}	,
		{500	,500	,5	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500}	,
		{102	,102	,5	,101	,101	,102	,102	,101	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102}	,
		{6	,6	,6	,6	,6	,7	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6}	,
		{103	,103	,103	,103	,103	,6	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103}	,
		{116	,116	,116	,116	,116	,116	,116	,9	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116}	,
		{9	,9	,9	,9	,9	,9	,9	,10	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9}	,
		{502	,502	,502	,502	,502	,502	,104	,501	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502}	,
		{11	,11	,11	,11	,11	,11	,11	,11	,11	,11	,11	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109}	,
		{503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,106	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503}	,
		{107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,109	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107}	,
		{110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,11	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110}	,
		{114	,114	,114	,114	,114	,114	,114	,115	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114}	,
                {122	,122	,122	,122	,122	,123	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122}	,
                {125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125}

        };//
    Scanner parametro = new Scanner(System.in);
    public static String Enunciado = "";
    Stack<Character> palabra = new Stack<>();
    Stack<Character> palabra2 = new Stack<>();
    public static int ELERROR = 1;

    public void RecibeCadena() {
        System.out.println("escribe una palabra");
        Enunciado = parametro.nextLine();
        System.out.println("se recibio la orden: " + Enunciado);
    }

    public void estados(int a) {
        switch (a) {
	    case 501:
                System.out.println("Identifiador mal formado");//501
		//e.estados(507);
                break;
            case 100:
                System.out.println("Identificador/Palabra Reservada/Operador Relacional");//100
		//e.estados(100);
                break;
            case 500:
                System.out.println("Real mal formado");//500
		//e.estados(500);
                break;
            case 101:
                System.out.println("Numeros Enteros");//101
		//e.estados(101);
                break;
            case 102:
                System.out.println("Numeros Reales");//102
		//e.estados(102);
                break;
            case 103:
                System.out.println("Letrero");//103
		//e.estados(103);
                break;
            case 502:
                System.out.println("Comentario");//502
		//e.estados(502);
                break;
            case 104:
                System.out.println("Formato");//104
		//e.estados(104);
                break;
            case 116:
                System.out.println("Division");//116
		//e.estados(116);
                break;
            case 105:
                System.out.println("Comentarios");//105
		//e.estados(105);
                break;
            case 508:
                System.out.println("Operador formado");//508
		//e.estados(508);
                break;
            case 106:
                System.out.println("Igualda");//106
		//e.estados(106);
                break;
            case 107:
                System.out.println("Menor");//107
		//e.estados(107);
                break;
            case 108:
                System.out.println("Diferente");//108
		//e.estados(108);
                break;
            case 109:
                System.out.println("Menor igual");//109
		//e.estados(109);
                break;
            case 110:
                System.out.println("Mayor");//110
		//e.estados(110);
                break;
            case 111:
                System.out.println("Mayor Igual");//111
		//e.estados(111);
                break;
            case 112:
                System.out.println("Suma");//112
		//e.estados(112);
                break;
            case 113:
                System.out.println("Resta");//113
		//e.estados(113);
                break;
            case 114:
                System.out.println("Multiplicacion");//114
		//e.estados(114);
                break;
            case 115:
                System.out.println("Por Por");//115
		//e.estados(115);
                break;
            case 117:
                System.out.println("Parentesis que abre");//117
		//e.estados(117);
                break;
            case 118:
                System.out.println("Parentesis que cierra");//118
		//e.estados(118);
                break;
            case 119:
                System.out.println("Corchete que abre");//119
		//e.estados(119);
                break;
            case 120:
                System.out.println("Corchete que cierra");//120
		//e.estados(120);
                break;
            case 121:
                System.out.println("Coma");//121
		//e.estados(121);
                break;
            case 122:
                System.out.println("Punto");//122
		//e.estados(122);
                break;
            case 123:
                System.out.println("Punto y punto");//123
		//e.estados(123);
                break;
            case 124:
                System.out.println("Punto y coma");//124
		//e.estados(124);
                break;
            case 125:
                System.out.println("Dos puntos");//125
		//e.estados(125);
                break;
            case 126:
                System.out.println("Asignacion");//126
		//e.estados(126);
                break;
            case 503:
                System.out.println("Or");//503
		//e.estados(503);
                break;
            case 504:
                System.out.println("And");//504
		//e.estados(504);
                break;
            case 505:
                System.out.println("Not");//505
		//e.estados(505);
                break;
            case 506:
                System.out.println("Error Logico");//506
		//e.estados(506);
                break;
            case 507:
                System.out.println("Error Doble guion");//507
		//e.estados(507);
                break;
            default:
                System.out.println("Caso Desconocido");
                break;
        }
    }

    public void LlenarPilla() {

        for (int DD = 0; DD <= Enunciado.length(); DD++) {
            palabra.push(Enunciado.charAt(DD));
        }
    }

        public void UltimoCaracter(){
        int lim = Enunciado.length();
        String Leida="";
        int Comentarios=0;
        int AnchoPalabra=0;
        int SimboloEsctrito=0;
        int apuntador=0;
        Stack<Character> PilaDelimitadores = new Stack<>();
        Stack<Character> PilaOperadores = new Stack<>();
        
        while(apuntador<lim){
        
            if((palabra.peek()>=65 && palabra.peek()<=90)||(palabra.peek()>=97 && palabra.peek() <=122  )){

                
                System.out.println("Es una letra");
                palabra2.push(palabra.pop());
                // Letras cortan operadores
                if(!PilaOperadores.isEmpty()){
                    System.out.println("Scar un caracter");
                    if((PilaOperadores.peek()=='*'||PilaOperadores.peek()=='/')&&Comentarios!=0){
                        PilaOperadores.pop();
                    }else if(PilaOperadores.peek()=='+'||PilaOperadores.peek()=='-'||PilaOperadores.peek()=='<'
                            ||PilaOperadores.peek()=='>'||PilaOperadores.peek()=='='||PilaOperadores.peek()==':'){
                        PilaOperadores.pop();
                    }
                }else if(!PilaDelimitadores.isEmpty()){
                    if(PilaDelimitadores.peek()=='_'||PilaDelimitadores.peek()=='.'||PilaDelimitadores.peek()==';'){
                        PilaDelimitadores.pop();
                    }                    
                }
                
                apuntador++;            
                AnchoPalabra++;
                Leida+=palabra2.pop();
                Leida=Leida.toLowerCase();
                
                switch (AnchoPalabra) {
                    case 2:
                        //Do        Of      By      To      If or
                        //Comparar si se parecen con un IF
                        //if
			   if(Leida=="do"){
         		   ELERROR=-1;
    			   System.out.println("Error palabra reservada");
        			}
         			else if(Leida=="of"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
        			else if(Leida=="by"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
        			else if(Leida=="to"){
           			 ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
                        //Si el error se cumple pasa a error

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 3:
                        //End       For      Not     Mod     Var     Div    and not             
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="end"){
         		   ELERROR=-1;
    			   System.out.println("Error palabra reservada");
			}
				else if(Leida=="for"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="not"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="mod"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="var"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="div"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="and"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 4:
                        //Case      Else    Loop    Exit    Then    With    True    Real    Char    Byte
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="case"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="else"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="loop"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="exit"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="then"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="with"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="true"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="real"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="char"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="byte"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 5:
                        //Array     Begin   Const   Until   While   False
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="array"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="begin"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="const"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="until"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="while"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="false"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 6:
                        //Readln    ElseIf  Module  Record  Repeat  Return  String
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="readln"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="elseif"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="module"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="repeat"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="return"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="string"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
			
                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 7:
                        //Writeln   Integer	Boolean
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="writeln"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="interger"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}
				else if(Leida=="boolean"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        			}

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 8:
                        //Function	Procedure
                        //Comparar si se parecen con un IF
                        //if
			if(Leida=="function"){
            		ELERROR=-1;
            		System.out.println("Error palabra reservada");
        		}
			else if(Leida=="procedure"){
            			ELERROR=-1;
            			System.out.println("Error palabra reservada");
        		}

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    default: 
                        break;
                }                
            }

            //delimitadores 
            else if(palabra.peek()==40 || palabra.peek()==41 || palabra.peek()==44
                    || palabra.peek()==46 || palabra.peek()>=91 && palabra.peek()<=96
                    ||palabra.peek()>=123 && palabra.peek()<=126){
                
                AnchoPalabra=0;
                 char Delimitador=palabra.pop();
                System.out.println("Es un delimitador");
                
                if(apuntador==lim-1){
                    ELERROR=-1;
                    System.out.println("Error no empieza con letra");
                }
                else if(apuntador==0 && Delimitador=='_'){
                    System.out.println("Error termina con guion bajo");
                }

                apuntador++;
                
                switch (Delimitador) {
                    case ')':
                        //Parentesis derecho
                        PilaDelimitadores.push('(');                        
                        break;
                    case ']':
                        //Corchete derecho
                        PilaDelimitadores.push('[');                        
                        break;
                    case '}':
                        //Llave derecha
                        PilaDelimitadores.push('{');                        
                        break;
                    case '(':
                        //Parentesis izquierdo
                        PilaDelimitadores.push('(');
                        break;
                    case '[':
                        //Corchete izquierdo
                        PilaDelimitadores.push('[');
                        break;
                    case '{':
                        //Llave izquierda
                        PilaDelimitadores.push('{');
                        break;
                    case '"':
                        if (!PilaDelimitadores.isEmpty()){
                            if(PilaDelimitadores.peek()=='"'){
                                //cerrar comillas
                            }
                            else{
                                //abrir comillas
                                PilaDelimitadores.push('"');
                            }
                        }else{
                            //abrir comillas
                            PilaDelimitadores.push('"');
                        }   break;
                    case '.':
                        if (!PilaDelimitadores.isEmpty()){
                            if(PilaDelimitadores.peek()=='.'){
                                //Doble punto
                            }
                            else{
                                //punto
                                PilaDelimitadores.push('.');
                            }
                        }else{
                            //punto
                            PilaDelimitadores.push('.');
                        }   break;
                        case ',':
                            //Coma
                            PilaDelimitadores.push(',');
                        break;
                        case ';':
                            //Punto y coma
                            PilaDelimitadores.push(';');
                        break;
                    case '_':
                        if(!PilaDelimitadores.isEmpty()){
                            if(PilaDelimitadores.peek()=='_'){
                                //No se permite doble guion
                                System.out.println("Error doble guion");
                            }
                            else{
                                //guion bajo
                                PilaDelimitadores.push('_');
                            }
                        }
                        else{
                            //guion bajo
                            PilaDelimitadores.push('_');
                        }   break;
                    default:
                        break;
                }                
            }
            
            //operadores          
            else if(palabra.peek()>=60 && palabra.peek()<=62
                    ||palabra.peek()==42||palabra.peek()==43||palabra.peek()==45
                    ||palabra.peek()==47){
                AnchoPalabra=0;
                System.out.println("Es un operador");
                
                 char operador=palabra.pop();
                
                if(apuntador==lim-1){
                    ELERROR=-1;
                    System.out.println("Error no empieza con letra");
                }               
                apuntador++;               
                switch (operador) {
                    case ':':
                        //dos puntos
                        PilaOperadores.push(operador);
                        break;
                    case '=':
                        if(!PilaOperadores.isEmpty()){
                            if(null==PilaOperadores.peek()){
                                //508
                                PilaOperadores.push(operador);
                            }
                            else switch (PilaOperadores.peek()) {
                                case ':':
                                    //Asignacion
                                    break;
                                case '<':
                                    //Menor igual
                                    break;
                                case '>':
                                    //Mayor igual
                                    break;
                                case '=':
                                    //Igualdad
                                    break;
                                default:
                                    //508
                                    PilaOperadores.push(operador);
                                    break;
                            }
                        }else{
                            //508
                            PilaOperadores.push(operador);
                        }   break;
                    case '<':
                        //menor
                        PilaOperadores.push(operador);
                        break;
                    case '>':
                        if(!PilaOperadores.isEmpty()){
                            if(PilaOperadores.peek()=='<'){
                                //diferente
                            }else{
                                //mayor
                                PilaOperadores.push(operador);
                            }
                        }else{
                            //mayor
                            PilaOperadores.push(operador);
                        }   break;
                    case '+':
                        PilaOperadores.push(operador);
                        //mas
                        break;
                    case '-':
                        PilaOperadores.push(operador);
                        //menos
                        break;
                    case '*':
                        if(!PilaOperadores.isEmpty()){
                            if(null==PilaOperadores.peek()){
                                //multiplicacion
                                PilaOperadores.push(operador);
                            }else switch (PilaOperadores.peek()) {
                                case '/':
                                    //Cerrar comentarios
                                    Comentarios+=-1;
                                    break;
                                case '*':
                                    //Por Por
                                    break;
                                default:
                                    //multiplicacion
                                    PilaOperadores.push(operador);
                                    break;
                            }
                        }else{
                            //multiplicacion
                            PilaOperadores.push(operador);
                        }   break;
                    case '/':
                        if(!PilaOperadores.isEmpty()){
                            if(PilaOperadores.peek()=='*'){
                                //Abrir comentarios
                                Comentarios+=1;
                            }else{
                                //divicion
                                PilaOperadores.push(operador);
                            }
                        }else{
                            //divicion
                            PilaOperadores.push(operador);
                        }   break;
                    default:
                        break;
                }
            }
            
            //numeros 
            else if(palabra.peek()>=48 && palabra.peek()<=57){
                AnchoPalabra=0;
                System.out.println("Es un numero");
                palabra.pop();
                if(apuntador==lim-1){
                    System.out.println("Error no empieza con letra");
                }
                // numeros cortan operadores
                if(!PilaOperadores.isEmpty()){
                    System.out.println("Scar un caracter");
                    if((PilaOperadores.peek()=='*'||PilaOperadores.peek()=='/')&&Comentarios!=0){
                        PilaOperadores.pop();
                    }else if(PilaOperadores.peek()=='+'||PilaOperadores.peek()=='-'||PilaOperadores.peek()=='<'
                            ||PilaOperadores.peek()=='>'||PilaOperadores.peek()=='='||PilaOperadores.peek()==':'){
                        PilaOperadores.pop();
                    }
                }else if(!PilaDelimitadores.isEmpty()){
                    if(PilaDelimitadores.peek()=='_'||PilaDelimitadores.peek()=='.'||PilaDelimitadores.peek()==';'){
                        PilaDelimitadores.pop();
                    }                    
                }
                apuntador++;
                
            }
            
            else if(palabra.peek()==32 || palabra.peek()=='\n'|| palabra.peek()=='\t'){
                AnchoPalabra=0;

                System.out.println("Es un espacio");
                palabra.pop();
                if(apuntador==lim-1){
                    System.out.println("Error no empieza con letra");
                }
                //avanzar en la pila
                   apuntador++;                           
            }
            else{
                AnchoPalabra=0;
                palabra.pop();
                if(apuntador==lim-1){
                    ELERROR=-1;
                    System.out.println("Error no empieza con letra");
                }
                System.out.println("Error caracter no valido");
                apuntador++;
            }            
        }
    }
}
